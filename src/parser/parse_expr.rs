use super::*;

impl Parse for Expr {
    fn parse(parser: &mut Parser<'_>) -> Result<Node<Self>, Node<ParseError>> {
        match parser.next()?.elt {
            Token::Indent => todo!(),
            Token::Newline => todo!(),
            Token::Variable => todo!(),
            Token::Class => todo!(),
            Token::Number => todo!(),
            Token::Underscore => todo!(),
            Token::Dot => todo!(),
            Token::Equals => todo!(),
            Token::EqualsEquals => todo!(),
            Token::Plus => todo!(),
            Token::PlusPlus => todo!(),
            Token::Minus => todo!(),
            Token::MinusMinus => todo!(),
            Token::Asterisk => todo!(),
            Token::AsteriskAsterisk => todo!(),
            Token::Slash => todo!(),
            Token::SlashSlash => todo!(),
            Token::Ampersand => todo!(),
            Token::AmpersandAmpersand => todo!(),
            Token::Pipe => todo!(),
            Token::PipePipe => todo!(),
            Token::Tilde => todo!(),
            Token::Bang => todo!(),
            Token::BangBang => todo!(),
            Token::Question => todo!(),
            Token::Pound => todo!(),
            Token::Percent => todo!(),
            Token::Caret => todo!(),
            Token::Colon => todo!(),
            Token::ColonColon => todo!(),
            Token::Backslash => todo!(),
            Token::ThinArrow => todo!(),
            Token::FatArrow => todo!(),
            Token::BangEquals => todo!(),
            Token::LAngle => todo!(),
            Token::RAngle => todo!(),
            Token::LParen => todo!(),
            Token::RParen => todo!(),
            Token::LSquare => todo!(),
            Token::RSquare => todo!(),
            Token::LCurl => todo!(),
            Token::RCurl => todo!(),
            Token::LAngleEquals => todo!(),
            Token::RAngleEquals => todo!(),
            Token::LAngleEqualsRAngle => todo!(),
        }
    }
}
