Triangle {
	v0 UInt
	v1 UInt
	v2 UInt
}

Mesh {
	gridSize 32

	vertices []Vec3
	triangles []Triangle
	boundingMin Vec3
	boundingMax Vec3

	grid [gridSize][gridSize][gridSize]Bool

	scaleVertices() {}
	markGrid() {}
	isVoxelInsideMesh(voxelX Int, voxelY Int, voxelZ Int) Bool
	doesRayIntersectTriangle(origin Vec3, dir Vec3, triangle [3]Vec3)

	new()                            Mesh
	initializeFromOBJFile(&self Mesh, filename String) Bool
	checkBlock(x Int, y Int, z Int)         Bool
}

OpenGLContext {
	new() OpenGLContext

	debugContextVersion() {}
	printGLErrorLog() {}
	parentLinkInfoLog(prog Int) {}
	printSharedInfoLog(shader Int) {}
}
