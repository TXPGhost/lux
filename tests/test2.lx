min(x: U64, y: U64): U64

Char: ()
String: []Char
Operator: <>
Option(T: ()): <some: T, none: ()>

AST: (
	Metadata: (
		line_min: U64
		line_max: U64
		col_min: U64
		col_max: U64

		combine(lhs: Metadata, rhs: Metadata): Metadata(
			line_min: min(lhs.line_min, rhs.line_min)
			line_max: max(lhs.line_max, rhs.line_max)
			col_min: min(lhs.col_min, rhs.col_min)
			col_max: max(lhs.col_max, rhs.col_max)
		)
	)

	Member: <
		expr: Expr
		named: (Ident, Expr)
		named_fn: (Ident, []Member, Expr)
	>

	Expr: <
		ident: Ident
		number: U64
		binop: Binop
		lambda: (Expr, Expr)
		index: (Expr, Expr)
		struct: []Member
		func: (Expr, []Member)
		block: []Stmt
	>

	Ident: <
		type: String
		value: String
	>

	Binop: (
		lhs: Expr
		rhs: Expr
		op: Operator
	)

	Unop: (
		expr: Expr
		op: Operator
	)

	Stmt: <
		expr: Expr
		binding: (Ident, Option(Expr), Expr)
		block: []Stmt
	>
)

main(): {
	x = AST.List()
}
